{"version":3,"sources":["../../src/js/app.js"],"names":["symbols","board","state","turn","gameOver","DEBUG_MODE","$","document","ready","updateMode","on","hide","settings","getOptions","playerIsO","movingFirst","show","Board","renderBoard","makeComMove","getGameState","winner","announceWinner","getBlankSquares","length","toggleClass","hasClass","removeClass","addClass","click","id","attr","row","charAt","cell","setSquare","mouseenter","isBlank","text","mouseleave","oldMode","localStorage","getItem","setItem","DARK_MODE_TOGGLEABLE_ELEMENTS","newMode","$darkModeBtn","i","$element","move","AI","findBestMove","rowIndex","cellIndex","getSquare","movingFirstInput","replace","Math","random","comMode"],"mappings":"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","file":"app.js","sourcesContent":["// NOTE: This may be the most hacky program I've ever made.\nvar symbols = {\n    \"player\": null,\n    \"computer\": null,\n    \"blank\": \" \"\n}\n\nvar board;\nvar state;\nvar turn;\nvar gameOver;\nconst DEBUG_MODE = false;\n\n$(document).ready(function () {\n    updateMode()\n    // Transition from choose symbol to play\n    $(\"#play-btn\").on('click', function () {\n        // Hide options/start menu\n        $(\"#start-menu\").hide();\n        // Check who is o and set symbols accordingly\n        let settings = getOptions();\n        if (settings.playerIsO) {\n            symbols[\"player\"] = 'O';\n            symbols[\"computer\"] = 'X';\n        } else {\n            symbols[\"player\"] = 'X';\n            symbols[\"computer\"] = 'O';\n        }\n        // Check who is moving first\n        turn = settings.movingFirst;\n        // Show the game page\n        $(\"#game\").show();\n        // Init board\n        board = new Board(DEBUG_MODE ? \"DEBUG\" : null);\n        renderBoard(board);\n        if (settings.movingFirst === \"com\") {\n            makeComMove();\n            // Check for win\n            state = board.getGameState()\n            if (state !== symbols['blank']) {\n                let winner = state === symbols['player'] ? \"Player\" : \"Computer\";\n                gameOver = true;\n                announceWinner(winner);\n                return;\n            } else if (board.getBlankSquares().length == 0) {\n                let winner = \"Tie\";\n                gameOver = true;\n                announceWinner(winner);\n                return;\n            }\n        }\n        renderBoard(board);\n    });\n\n    // Who is O toggle\n    $(\"#o-toggle .toggle\").on('click', function () {\n        $(\"#who-is-o .toggle\").toggleClass(\"button-filled-purple selected button-gray\")\n    });\n\n    // Moving first toggle\n    $(\"#moving-first-toggle .toggle\").on('click', function () {\n        if ($(this).hasClass(\"selected\")) {\n            return;\n        }\n        $(\"#moving-first-toggle .toggle\").removeClass(\"selected button-filled-purple\").addClass(\"button-gray\");\n        $(this).addClass(\"selected button-filled-purple\").removeClass(\"button-gray\");\n    });\n\n    // Difficulty toggle\n    $(\"#com-mode-toggle .toggle\").on('click', function () {\n        if ($(this).hasClass(\"selected\")) {\n            return;\n        }\n        $(\"#com-mode-toggle .toggle\").removeClass(\"selected button-filled-purple\").addClass(\"button-gray\");\n        $(this).addClass(\"selected button-filled-purple\").removeClass(\"button-gray\");\n    });\n\n    $(\".cell\").on({\n        click: function() {\n            if (!$(this).hasClass(\"blank\")) {\n                return;\n            }\n            if (turn === 'com' || gameOver) {\n                return;\n            } else {\n                turn = 'com';\n            }\n            $(this).removeClass('blank preview-move');\n            let id = $(this).attr(\"id\");\n            let row = id.charAt(0);\n            let cell = id.charAt(1);\n            board.setSquare(symbols[\"player\"], row, cell);\n            renderBoard(board);\n            // Check for win\n            let state = board.getGameState()\n            if (state !== symbols['blank']) {\n                let winner = state === symbols['player'] ? \"Player\" : \"Computer\";\n                gameOver = true;\n                announceWinner(winner);\n                return;\n            } else if (board.getBlankSquares().length == 0) {\n                let winner = \"Tie\";\n                gameOver = true;\n                announceWinner(winner);\n                return;\n            }\n            makeComMove();\n            // Check for win again\n            state = board.getGameState()\n            if (state !== symbols['blank']) {\n                let winner = state === symbols['player'] ? \"Player\" : \"Computer\";\n                gameOver = true;\n                announceWinner(winner);\n                return;\n            } else if (board.getBlankSquares().length == 0) {\n                let winner = \"Tie\";\n                gameOver = true;\n                announceWinner(winner);\n                return;\n            }\n        },\n        mouseenter: function () {\n            let isBlank = $(this).hasClass(\"blank\");\n            if ($(this).hasClass(\"blank\") && turn === \"ply\") {\n                $(this).text(symbols['player']);\n                $(this).addClass(\"preview-move\");\n            }\n        },\n        mouseleave: function () {\n            // NOTE: Not trustworthy after being clicked, for some reason.\n            if ($(this).hasClass(\"blank\") && turn === \"ply\") {\n                $(this).text(symbols['blank']);\n                $(this).removeClass(\"preview-move\");\n            }\n        }\n    });\n\n    // Dark mode stuff\n    $(\"#dark-mode-button\").on('click', function () {\n        let oldMode = localStorage.getItem(\"mode\");\n        localStorage.setItem(\"mode\", oldMode == 'light' ? 'dark' : 'light');\n        updateMode();\n    });\n    \n    function updateMode() {\n        const DARK_MODE_TOGGLEABLE_ELEMENTS = [\"body\", \".button\", \".select\", \"#board .cell\"];\n        let newMode = localStorage.getItem(\"mode\");\n        let $darkModeBtn = $(\"#dark-mode-button\")\n        if (newMode === \"dark\") {\n            for (let i = 0; i < DARK_MODE_TOGGLEABLE_ELEMENTS.length; i++) {\n                let $element = $(DARK_MODE_TOGGLEABLE_ELEMENTS[i]);\n                $element.addClass(\"dark\");\n            }\n            $darkModeBtn.removeClass(\"button-filled-dark\").addClass(\"button-filled-light\")\n                .text(\"Light Mode! 🌻\")\n        } else {\n            for (let i = 0; i < DARK_MODE_TOGGLEABLE_ELEMENTS.length; i++) {\n                let $element = $(DARK_MODE_TOGGLEABLE_ELEMENTS[i]);\n                $element.removeClass(\"dark\");\n            }\n            $darkModeBtn.addClass(\"button-filled-dark\").removeClass(\"button-filled-light\")\n                .text(\"Dark Mode! 🌙\")\n        }\n    };\n\n    $(\"#settings\").on('click', function () {\n        $(\"#play-btn\").hide();\n        $(\"#start-menu\").show();\n        $(\"#continue-btn\").show();\n        $(\"#game\").hide();\n    });\n\n    $(\"#continue-btn\").on('click', function () {\n        let settings = getOptions();\n        $(\"#start-menu\").hide();\n        $(\"#game\").show();\n    });\n\n    // Reset button\n    $(\"#reset-button\").on('click', function () {\n        let settings = getOptions();\n        board = new Board();\n        if (settings.playerIsO) {\n            symbols[\"player\"] = 'O';\n            symbols[\"computer\"] = 'X';\n        } else {\n            symbols[\"player\"] = 'X';\n            symbols[\"computer\"] = 'O';\n        }\n        $(\".cell\").addClass(\"blank\");\n        $(\"#winner\").text(\"\");\n        renderBoard(board);\n        turn = settings.movingFirst;\n        gameOver = false;\n        if (turn === \"com\") {\n            makeComMove();\n            turn = \"ply\";\n        }\n    });\n\n    function announceWinner(winner) {\n        if (winner == \"Tie\") {\n            $(\"#winner\").text(`It's a tie!`);\n        } else {\n            $(\"#winner\").text(`${winner} wins!`);\n        }\n    }\n\n    function makeComMove() {\n        let move = AI.findBestMove(board);\n        board.setSquare(symbols[\"computer\"], move.row, move.cell);\n        $(`table#board td#${move.row}${move.cell}`).removeClass(\"blank\");\n        renderBoard(board);\n        turn = \"ply\"\n    }\n\n    function renderBoard(board) {\n        for (let rowIndex = 0; rowIndex < 3; rowIndex++) {\n            for (let cellIndex = 0; cellIndex < 3; cellIndex++) {\n                $(`#board #${rowIndex}${cellIndex}`).text(board.getSquare(rowIndex, cellIndex));\n            }\n        }\n    }\n\n    function getOptions() {\n        let movingFirstInput = $(\"#moving-first-toggle .selected\").attr(\"id\").replace(\"-is-moving-first\", \"\");\n        let movingFirst = movingFirstInput == \"rnd\" ? (Math.random() < 0.5 ? \"ply\" : \"com\") : movingFirstInput;\n        let playerIsO = $(\"#o-toggle .selected\").attr(\"id\").replace(\"-is-o\", \"\") == \"ply\";\n        let comMode\n        return {\n            movingFirst: movingFirst,\n            playerIsO: playerIsO,\n            comMode: comMode\n        }\n    }\n});"]}